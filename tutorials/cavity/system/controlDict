/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.0                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     DTSPLDFSSFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         1000;

deltaT          1e-2;

adjustTimeStep	true;

maxCo		1;

maxDeltaT	1e-1;

writeControl    adjustableRunTime;

writeInterval   10;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression compressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;


functions
{
/*   fieldAverage1
    {
        type            fieldAverage;
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        enabled         true;
	timeStart	3;
        writeControl      outputTime;
        fields
        (
            U
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

            P_gauge
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }

            T_gauge
            {
                mean        on;
                prime2Mean  on;
                base        time;
            }
        );
    }

    forces
    {
        type                forces;
        functionObjectLibs  ( "libforces.so" );
        writeControl       timeStep;
        writeInterval      1;
        patches             (CYLINDER);
        p               p;
        U               U;
        rho             rho;
        log                 true;
        CofR                (0 0 0);
    }

forceCoeffs
{
    type            forceCoeffs;
    libs            ("libforces.so");
    patches         (CYLINDER);
    p               p;
    U               U;
    rho             rho;
    pRef            101325;
    porosity        no;
    CofR            (0 0 0);
    liftDir         (0 1 0);
    dragDir         (1 0 0);
    pitchAxis       (0 0 1);
    magUInf         0.0346;
    rhoInf	    1.18473;
    lRef            1;
    Aref            1;
}
*/
}

// ************************************************************************* //
